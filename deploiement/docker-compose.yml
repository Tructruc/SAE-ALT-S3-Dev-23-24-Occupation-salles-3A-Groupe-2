version: '3'

services:
  django-backend:
    platform: linux/amd64
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: django-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ../backend/API:/API #Volume for DEV
    networks:
      private-network:
        ipv4_address: 172.69.69.2
    
  timescaledb:
    platform: linux/amd64
    image: timescale/timescaledb:latest-pg12
    container_name: timescaledb
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=data-iot
      - TZ=Europe/Paris
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      private-network:
        ipv4_address: 172.69.69.3

  vuejs-frontend :
    platform: linux/amd64
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: vuejs-frontend
    restart: unless-stopped
    environment:
      - TZ=Europe/Paris
    ports:
      - "8080:80"
    networks:
      private-network:
        ipv4_address: 172.69.69.4


  # A utiliser pour la gestion de la base de donn√©e avec UI : localhost:8080
  adminer:
    image: adminer
    restart: unless-stopped
    environment:
      - ADMINER_DEFAULT_SERVER= ${MYSQL_HOST}
      - TZ=Europe/Paris
    ports:
      - 8081:8080
    networks:
      private-network :
        ipv4_address: 172.69.69.5

networks:
  private-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.69.69.0/24